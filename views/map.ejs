<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <title></title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <!-- <script src="/javascripts/vue.js"></script> -->
    <!-- <script src="/javascripts/vue-resource.js"></script> -->
    <script src="/javascripts/socket.io.js"></script>
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.27.0/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.27.0/mapbox-gl.css' rel='stylesheet' />
    <style>
        body { margin:0; padding:0; }
        #map { position:absolute; top:0; bottom:0; width:100%; }
    </style>
</head>
<body>

<div id='map'></div>
<script>
mapboxgl.accessToken = 'pk.eyJ1IjoieXVnYW8xOTk2IiwiYSI6ImNpdmtodDgwaDBjZzcyb3BvNTJmbjNtdWcifQ.WHIfvM62pR5G500VqMBfsg';
var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/dark-v9',
    zoom: 5,
    center: [121.4339081, 31.0276681]
});

var socket = io();

var pointData = [];
var index = 0;

map.on('load', firstLoad);

socket.on('dataArrive', function(jsonData){
    // console.log(jsonData);
    try
    {
        pointData = pointData.concat(JSON.parse(jsonData));
        // console.log(JSON.stringify(pointData));
    }
    catch(err)
    {
        console.log(err);
    }
    map.getSource('polution').setData({
        "type": "FeatureCollection",
        "features": pointData
    });
    index += 1;
    socket.emit('requireData', index);
})

function firstLoad() {
    map.addSource('polution', {
        "type": "geojson",
        "data": {
            "type": "FeatureCollection",
            "features": pointData  
        }
    });
    map.addLayer({
        'id': 'polution',
        'type': 'circle',
        'source': 'polution',
        'paint': {
            // make circles larger as the user zooms from z12 to z22
            'circle-radius': {
                property: 'size',
                type: 'interval',
                stops: [
                    [75, 7], 
                    [150, 6], 
                    [300, 5], 
                    [1050, 4], 
                    [3000, 3], 
                    [10000, 2]]
            },
            // color circles by ethnicity, using data-driven styles
            'circle-color': {
                property: 'size',
                type: 'interval',
                stops: [
                    [75, '#68cb00'],
                    [150, '#f6e200'],
                    [300, '#fb890f'],
                    [1050, '#df2d00'],
                    [3000, '#b414bb'],
                    [10000, '#6f0474']]
            }
        }
    });
    socket.emit('requireData', index);
}
</script>

</body>
</html>
